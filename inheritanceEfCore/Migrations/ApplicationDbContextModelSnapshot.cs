// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inheritanceEfCore.Data;

#nullable disable

namespace inheritanceEfCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("inheritanceEfCore.Models.Tpc.CarTpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarsTpc", (string)null);
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpc.MotorcycleTpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasFairing")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotorcyclesTpc", (string)null);
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tph.VehicleTph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehiclesTph", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("VehicleTph");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpt.VehicleTpt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehiclesTpt", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tph.CarTph", b =>
                {
                    b.HasBaseType("inheritanceEfCore.Models.Tph.VehicleTph");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CarTph");
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tph.MotorcycleTph", b =>
                {
                    b.HasBaseType("inheritanceEfCore.Models.Tph.VehicleTph");

                    b.Property<bool>("HasFairing")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("MotorcycleTph");
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpt.CarTpt", b =>
                {
                    b.HasBaseType("inheritanceEfCore.Models.Tpt.VehicleTpt");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasIndex("VehicleId");

                    b.ToTable("CarsTpt", (string)null);
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpt.MotorcycleTpt", b =>
                {
                    b.HasBaseType("inheritanceEfCore.Models.Tpt.VehicleTpt");

                    b.Property<bool>("HasFairing")
                        .HasColumnType("bit");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasIndex("VehicleId");

                    b.ToTable("MotorcyclesTpt", (string)null);
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpt.CarTpt", b =>
                {
                    b.HasOne("inheritanceEfCore.Models.Tpt.VehicleTpt", null)
                        .WithOne()
                        .HasForeignKey("inheritanceEfCore.Models.Tpt.CarTpt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("inheritanceEfCore.Models.Tpt.VehicleTpt", "VehicleTpt")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleTpt");
                });

            modelBuilder.Entity("inheritanceEfCore.Models.Tpt.MotorcycleTpt", b =>
                {
                    b.HasOne("inheritanceEfCore.Models.Tpt.VehicleTpt", null)
                        .WithOne()
                        .HasForeignKey("inheritanceEfCore.Models.Tpt.MotorcycleTpt", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("inheritanceEfCore.Models.Tpt.VehicleTpt", "VehicleTpt")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("VehicleTpt");
                });
#pragma warning restore 612, 618
        }
    }
}
